name: check version change on PR
on:
  pull_request:
    paths:
      - package.json

permissions:
  contents: write

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check-version-change.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: git checkout
        run: git checkout ${{ github.head_ref }}
      - name: check version change
        id: check-version-change
        run: |
          diff_count=$(git diff origin/${{ github.base_ref }} -- package.json | grep -c 'version')
          echo "diff_count"$diff_count
          commits=${{ github.event.pull_request.commits }}
          if [ $diff_count -eq 2 ]; then
            new_version=$(cat package.json | grep -Po '"version": "\K.*?(?=")')
            echo "version=$new_version" >> $GITHUB_OUTPUT 
            echo "version change is detected. new version: "$new_version
          else
            echo "version change is not detected!"
            exit 0
          fi
  create-tag-and-release:
    runs-on: ubuntu-latest
    needs: check-version-change
    if: ${{needs.check-version-change.outputs.version}}
    steps:
      - uses: actions/checkout@v3
      - run: echo "version"${{needs.check-version-change.outputs.version}}
      - name: create tag
        run: |
          git tag v${{needs.check-version-change.outputs.version}}
          git push origin v${{needs.check-version-change.outputs.version}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: create release
        run: |
          gh release create v${{needs.check-version-change.outputs.version}} --title "Bump v${{needs.check-version-change.outputs.version}}" -F CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
