name: check version change on PR
on:
  pull_request:
    paths:
      - package.json

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check-version-change.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: git checkout
        run: git checkout ${{ github.head_ref }}
      - name: check version change
        id: check-version-change
        run: |
          diff_count=$(git diff origin/${{ github.base_ref }} -- package.json | grep -c 'version')
          echo "diff_count"$diff_count
          commits=${{ github.event.pull_request.commits }}
          if [ $diff_count -eq 2 ]; then
            new_version=$(cat pkg/appx/version.go | grep -Po 'version = "\K.*?(?=")')
            echo "version=$new_version" >> $GITHUB_OUTPUT 
            echo "version change is detected. new version: "$new_version
          else
            echo "version change is not detected"
            exit 0
          fi
  post-comment-to-pr:
    runs-on: ubuntu-latest
    needs: check-version-change
    steps:
      - uses: actions/checkout@v3
      - run: echo "version"${{needs.check-version-change.outputs.version}}
      - name: post github comment
        uses: actions/github-script@v6
        if: ${{needs.check-version-change.outputs.version}}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "New release version will be created automatically when this PR merged into master! New version: ${{needs.check-version-change.outputs.version}}"
            })
